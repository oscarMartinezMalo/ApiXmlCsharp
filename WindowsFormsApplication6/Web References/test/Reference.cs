//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WindowsFormsApplication6.test {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CSSoapServiceSoap", Namespace="urn:CSSoapService")]
    public partial class CSSoapService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TestConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartTrackingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrackingTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvitationFromPeerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AnswerInvitationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AnswerInvitation2OperationCompleted;
        
        private System.Threading.SendOrPostCallback StartSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransRangeByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkingPortsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTripScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookingRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartTracking2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomFieldDefinitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemFromVINOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetShipmentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMagayaDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountingTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelatedTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountDefinitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChargeDefinitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPODDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStandardRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientChargeDefinitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntityContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitSalesOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitCargoReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitShipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventDefinitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTransactionEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCustomFieldValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetApprovalStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarrierRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntityTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryLogJSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistsTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTrackingUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemDefinitionsByCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryItemsByItemDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionsByBillingClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntitiesOfTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFirstTransbyDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFirstTransbyDateJSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextTransbyDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransRangeByDateJSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecureTrackingTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvokeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateSalesOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelSalesOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTransactionChargesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePODOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitPickupOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetParentEntityOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CSSoapService() {
            this.Url = global::WindowsFormsApplication6.Properties.Settings.Default.WindowsFormsApplication6_test_CSSoapService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TestConnectionCompletedEventHandler TestConnectionCompleted;
        
        /// <remarks/>
        public event StartTrackingCompletedEventHandler StartTrackingCompleted;
        
        /// <remarks/>
        public event GetTrackingTransactionCompletedEventHandler GetTrackingTransactionCompleted;
        
        /// <remarks/>
        public event GetAttachmentCompletedEventHandler GetAttachmentCompleted;
        
        /// <remarks/>
        public event GetDocumentCompletedEventHandler GetDocumentCompleted;
        
        /// <remarks/>
        public event InvitationFromPeerCompletedEventHandler InvitationFromPeerCompleted;
        
        /// <remarks/>
        public event AnswerInvitationCompletedEventHandler AnswerInvitationCompleted;
        
        /// <remarks/>
        public event AnswerInvitation2CompletedEventHandler AnswerInvitation2Completed;
        
        /// <remarks/>
        public event StartSessionCompletedEventHandler StartSessionCompleted;
        
        /// <remarks/>
        public event EndSessionCompletedEventHandler EndSessionCompleted;
        
        /// <remarks/>
        public event GetTransactionCompletedEventHandler GetTransactionCompleted;
        
        /// <remarks/>
        public event SetTransactionCompletedEventHandler SetTransactionCompleted;
        
        /// <remarks/>
        public event GetTransRangeByDateCompletedEventHandler GetTransRangeByDateCompleted;
        
        /// <remarks/>
        public event DeleteTransactionCompletedEventHandler DeleteTransactionCompleted;
        
        /// <remarks/>
        public event RenameTransactionCompletedEventHandler RenameTransactionCompleted;
        
        /// <remarks/>
        public event GetWorkingPortsCompletedEventHandler GetWorkingPortsCompleted;
        
        /// <remarks/>
        public event GetTripScheduleCompletedEventHandler GetTripScheduleCompleted;
        
        /// <remarks/>
        public event BookingRequestCompletedEventHandler BookingRequestCompleted;
        
        /// <remarks/>
        public event StartTracking2CompletedEventHandler StartTracking2Completed;
        
        /// <remarks/>
        public event GetPackageTypesCompletedEventHandler GetPackageTypesCompleted;
        
        /// <remarks/>
        public event CancelBookingCompletedEventHandler CancelBookingCompleted;
        
        /// <remarks/>
        public event GetCustomFieldDefinitionsCompletedEventHandler GetCustomFieldDefinitionsCompleted;
        
        /// <remarks/>
        public event GetItemFromVINCompletedEventHandler GetItemFromVINCompleted;
        
        /// <remarks/>
        public event SetShipmentStatusCompletedEventHandler SetShipmentStatusCompleted;
        
        /// <remarks/>
        public event GetMagayaDocumentCompletedEventHandler GetMagayaDocumentCompleted;
        
        /// <remarks/>
        public event GetAccountingTransactionsCompletedEventHandler GetAccountingTransactionsCompleted;
        
        /// <remarks/>
        public event GetRelatedTransactionsCompletedEventHandler GetRelatedTransactionsCompleted;
        
        /// <remarks/>
        public event GetAccountDefinitionsCompletedEventHandler GetAccountDefinitionsCompleted;
        
        /// <remarks/>
        public event GetChargeDefinitionsCompletedEventHandler GetChargeDefinitionsCompleted;
        
        /// <remarks/>
        public event GetActiveCurrenciesCompletedEventHandler GetActiveCurrenciesCompleted;
        
        /// <remarks/>
        public event QueryLogCompletedEventHandler QueryLogCompleted;
        
        /// <remarks/>
        public event GetPODDataCompletedEventHandler GetPODDataCompleted;
        
        /// <remarks/>
        public event GetClientRatesCompletedEventHandler GetClientRatesCompleted;
        
        /// <remarks/>
        public event GetStandardRatesCompletedEventHandler GetStandardRatesCompleted;
        
        /// <remarks/>
        public event GetClientChargeDefinitionsCompletedEventHandler GetClientChargeDefinitionsCompleted;
        
        /// <remarks/>
        public event SetRateCompletedEventHandler SetRateCompleted;
        
        /// <remarks/>
        public event SetEntityCompletedEventHandler SetEntityCompleted;
        
        /// <remarks/>
        public event GetEntitiesCompletedEventHandler GetEntitiesCompleted;
        
        /// <remarks/>
        public event GetEntityContactsCompletedEventHandler GetEntityContactsCompleted;
        
        /// <remarks/>
        public event SubmitSalesOrderCompletedEventHandler SubmitSalesOrderCompleted;
        
        /// <remarks/>
        public event SubmitCargoReleaseCompletedEventHandler SubmitCargoReleaseCompleted;
        
        /// <remarks/>
        public event SubmitShipmentCompletedEventHandler SubmitShipmentCompleted;
        
        /// <remarks/>
        public event GetEventDefinitionsCompletedEventHandler GetEventDefinitionsCompleted;
        
        /// <remarks/>
        public event SetTransactionEventsCompletedEventHandler SetTransactionEventsCompleted;
        
        /// <remarks/>
        public event UpdateOrderCompletedEventHandler UpdateOrderCompleted;
        
        /// <remarks/>
        public event SetCustomFieldValueCompletedEventHandler SetCustomFieldValueCompleted;
        
        /// <remarks/>
        public event SetApprovalStatusCompletedEventHandler SetApprovalStatusCompleted;
        
        /// <remarks/>
        public event GetCarrierRatesCompletedEventHandler GetCarrierRatesCompleted;
        
        /// <remarks/>
        public event GetEntityTransactionsCompletedEventHandler GetEntityTransactionsCompleted;
        
        /// <remarks/>
        public event QueryLogJSCompletedEventHandler QueryLogJSCompleted;
        
        /// <remarks/>
        public event ExistsTransactionCompletedEventHandler ExistsTransactionCompleted;
        
        /// <remarks/>
        public event GetTransactionStatusCompletedEventHandler GetTransactionStatusCompleted;
        
        /// <remarks/>
        public event SetTrackingUserCompletedEventHandler SetTrackingUserCompleted;
        
        /// <remarks/>
        public event GetItemDefinitionsByCustomerCompletedEventHandler GetItemDefinitionsByCustomerCompleted;
        
        /// <remarks/>
        public event GetInventoryItemsByItemDefinitionCompletedEventHandler GetInventoryItemsByItemDefinitionCompleted;
        
        /// <remarks/>
        public event GetTransactionsByBillingClientCompletedEventHandler GetTransactionsByBillingClientCompleted;
        
        /// <remarks/>
        public event GetEntitiesOfTypeCompletedEventHandler GetEntitiesOfTypeCompleted;
        
        /// <remarks/>
        public event GetWebDocumentCompletedEventHandler GetWebDocumentCompleted;
        
        /// <remarks/>
        public event GetFirstTransbyDateCompletedEventHandler GetFirstTransbyDateCompleted;
        
        /// <remarks/>
        public event GetFirstTransbyDateJSCompletedEventHandler GetFirstTransbyDateJSCompleted;
        
        /// <remarks/>
        public event GetNextTransbyDateCompletedEventHandler GetNextTransbyDateCompleted;
        
        /// <remarks/>
        public event GetTransRangeByDateJSCompletedEventHandler GetTransRangeByDateJSCompleted;
        
        /// <remarks/>
        public event GetSecureTrackingTransactionCompletedEventHandler GetSecureTrackingTransactionCompleted;
        
        /// <remarks/>
        public event InvokeCompletedEventHandler InvokeCompleted;
        
        /// <remarks/>
        public event ValidateSalesOrderCompletedEventHandler ValidateSalesOrderCompleted;
        
        /// <remarks/>
        public event CancelSalesOrderCompletedEventHandler CancelSalesOrderCompleted;
        
        /// <remarks/>
        public event SetTransactionChargesCompletedEventHandler SetTransactionChargesCompleted;
        
        /// <remarks/>
        public event UpdatePODCompletedEventHandler UpdatePODCompleted;
        
        /// <remarks/>
        public event ApproveOrderCompletedEventHandler ApproveOrderCompleted;
        
        /// <remarks/>
        public event SubmitPickupOrderCompletedEventHandler SubmitPickupOrderCompleted;
        
        /// <remarks/>
        public event SetAttachmentCompletedEventHandler SetAttachmentCompleted;
        
        /// <remarks/>
        public event GetAllAttachmentsCompletedEventHandler GetAllAttachmentsCompleted;
        
        /// <remarks/>
        public event SetParentEntityCompletedEventHandler SetParentEntityCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#TestConnection", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("out_cookie")]
        public int TestConnection(int in_cookie, int id) {
            object[] results = this.Invoke("TestConnection", new object[] {
                        in_cookie,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TestConnectionAsync(int in_cookie, int id) {
            this.TestConnectionAsync(in_cookie, id, null);
        }
        
        /// <remarks/>
        public void TestConnectionAsync(int in_cookie, int id, object userState) {
            if ((this.TestConnectionOperationCompleted == null)) {
                this.TestConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnectionOperationCompleted);
            }
            this.InvokeAsync("TestConnection", new object[] {
                        in_cookie,
                        id}, this.TestConnectionOperationCompleted, userState);
        }
        
        private void OnTestConnectionOperationCompleted(object arg) {
            if ((this.TestConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnectionCompleted(this, new TestConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#StartTracking", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int StartTracking(string login, string password, out int services, out string company_info, out int cookie) {
            object[] results = this.Invoke("StartTracking", new object[] {
                        login,
                        password});
            services = ((int)(results[1]));
            company_info = ((string)(results[2]));
            cookie = ((int)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void StartTrackingAsync(string login, string password) {
            this.StartTrackingAsync(login, password, null);
        }
        
        /// <remarks/>
        public void StartTrackingAsync(string login, string password, object userState) {
            if ((this.StartTrackingOperationCompleted == null)) {
                this.StartTrackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartTrackingOperationCompleted);
            }
            this.InvokeAsync("StartTracking", new object[] {
                        login,
                        password}, this.StartTrackingOperationCompleted, userState);
        }
        
        private void OnStartTrackingOperationCompleted(object arg) {
            if ((this.StartTrackingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartTrackingCompleted(this, new StartTrackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetTrackingTransaction", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("trans_xml")]
        public string GetTrackingTransaction(string app, string number) {
            object[] results = this.Invoke("GetTrackingTransaction", new object[] {
                        app,
                        number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrackingTransactionAsync(string app, string number) {
            this.GetTrackingTransactionAsync(app, number, null);
        }
        
        /// <remarks/>
        public void GetTrackingTransactionAsync(string app, string number, object userState) {
            if ((this.GetTrackingTransactionOperationCompleted == null)) {
                this.GetTrackingTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrackingTransactionOperationCompleted);
            }
            this.InvokeAsync("GetTrackingTransaction", new object[] {
                        app,
                        number}, this.GetTrackingTransactionOperationCompleted, userState);
        }
        
        private void OnGetTrackingTransactionOperationCompleted(object arg) {
            if ((this.GetTrackingTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrackingTransactionCompleted(this, new GetTrackingTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetAttachment", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("attach_xml")]
        public string GetAttachment(string app, string trans_uuid, int attach_id) {
            object[] results = this.Invoke("GetAttachment", new object[] {
                        app,
                        trans_uuid,
                        attach_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentAsync(string app, string trans_uuid, int attach_id) {
            this.GetAttachmentAsync(app, trans_uuid, attach_id, null);
        }
        
        /// <remarks/>
        public void GetAttachmentAsync(string app, string trans_uuid, int attach_id, object userState) {
            if ((this.GetAttachmentOperationCompleted == null)) {
                this.GetAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentOperationCompleted);
            }
            this.InvokeAsync("GetAttachment", new object[] {
                        app,
                        trans_uuid,
                        attach_id}, this.GetAttachmentOperationCompleted, userState);
        }
        
        private void OnGetAttachmentOperationCompleted(object arg) {
            if ((this.GetAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentCompleted(this, new GetAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetDocument", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("attach_xml")]
        public string GetDocument(string trans_uuid, int doc_id) {
            object[] results = this.Invoke("GetDocument", new object[] {
                        trans_uuid,
                        doc_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAsync(string trans_uuid, int doc_id) {
            this.GetDocumentAsync(trans_uuid, doc_id, null);
        }
        
        /// <remarks/>
        public void GetDocumentAsync(string trans_uuid, int doc_id, object userState) {
            if ((this.GetDocumentOperationCompleted == null)) {
                this.GetDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentOperationCompleted);
            }
            this.InvokeAsync("GetDocument", new object[] {
                        trans_uuid,
                        doc_id}, this.GetDocumentOperationCompleted, userState);
        }
        
        private void OnGetDocumentOperationCompleted(object arg) {
            if ((this.GetDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentCompleted(this, new GetDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#InvitationFromPeer", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int InvitationFromPeer(int id, string uuid, string employee, string body, string company, string country, string city) {
            object[] results = this.Invoke("InvitationFromPeer", new object[] {
                        id,
                        uuid,
                        employee,
                        body,
                        company,
                        country,
                        city});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InvitationFromPeerAsync(int id, string uuid, string employee, string body, string company, string country, string city) {
            this.InvitationFromPeerAsync(id, uuid, employee, body, company, country, city, null);
        }
        
        /// <remarks/>
        public void InvitationFromPeerAsync(int id, string uuid, string employee, string body, string company, string country, string city, object userState) {
            if ((this.InvitationFromPeerOperationCompleted == null)) {
                this.InvitationFromPeerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvitationFromPeerOperationCompleted);
            }
            this.InvokeAsync("InvitationFromPeer", new object[] {
                        id,
                        uuid,
                        employee,
                        body,
                        company,
                        country,
                        city}, this.InvitationFromPeerOperationCompleted, userState);
        }
        
        private void OnInvitationFromPeerOperationCompleted(object arg) {
            if ((this.InvitationFromPeerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvitationFromPeerCompleted(this, new InvitationFromPeerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#AnswerInvitation", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int AnswerInvitation(int bAccepted, string uuid, string employee, string body, string company, string country, string city, ref contact_info pInfo) {
            object[] results = this.Invoke("AnswerInvitation", new object[] {
                        bAccepted,
                        uuid,
                        employee,
                        body,
                        company,
                        country,
                        city,
                        pInfo});
            pInfo = ((contact_info)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AnswerInvitationAsync(int bAccepted, string uuid, string employee, string body, string company, string country, string city, contact_info pInfo) {
            this.AnswerInvitationAsync(bAccepted, uuid, employee, body, company, country, city, pInfo, null);
        }
        
        /// <remarks/>
        public void AnswerInvitationAsync(int bAccepted, string uuid, string employee, string body, string company, string country, string city, contact_info pInfo, object userState) {
            if ((this.AnswerInvitationOperationCompleted == null)) {
                this.AnswerInvitationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnswerInvitationOperationCompleted);
            }
            this.InvokeAsync("AnswerInvitation", new object[] {
                        bAccepted,
                        uuid,
                        employee,
                        body,
                        company,
                        country,
                        city,
                        pInfo}, this.AnswerInvitationOperationCompleted, userState);
        }
        
        private void OnAnswerInvitationOperationCompleted(object arg) {
            if ((this.AnswerInvitationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnswerInvitationCompleted(this, new AnswerInvitationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#AnswerInvitation2", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int AnswerInvitation2(int bAccepted, string uuid, string employee, string body, string company, string country, string city, ref contact_info2 pInfo) {
            object[] results = this.Invoke("AnswerInvitation2", new object[] {
                        bAccepted,
                        uuid,
                        employee,
                        body,
                        company,
                        country,
                        city,
                        pInfo});
            pInfo = ((contact_info2)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AnswerInvitation2Async(int bAccepted, string uuid, string employee, string body, string company, string country, string city, contact_info2 pInfo) {
            this.AnswerInvitation2Async(bAccepted, uuid, employee, body, company, country, city, pInfo, null);
        }
        
        /// <remarks/>
        public void AnswerInvitation2Async(int bAccepted, string uuid, string employee, string body, string company, string country, string city, contact_info2 pInfo, object userState) {
            if ((this.AnswerInvitation2OperationCompleted == null)) {
                this.AnswerInvitation2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnswerInvitation2OperationCompleted);
            }
            this.InvokeAsync("AnswerInvitation2", new object[] {
                        bAccepted,
                        uuid,
                        employee,
                        body,
                        company,
                        country,
                        city,
                        pInfo}, this.AnswerInvitation2OperationCompleted, userState);
        }
        
        private void OnAnswerInvitation2OperationCompleted(object arg) {
            if ((this.AnswerInvitation2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnswerInvitation2Completed(this, new AnswerInvitation2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#StartSession", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error StartSession(string user, string pass, out int access_key) {
            object[] results = this.Invoke("StartSession", new object[] {
                        user,
                        pass});
            access_key = ((int)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void StartSessionAsync(string user, string pass) {
            this.StartSessionAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void StartSessionAsync(string user, string pass, object userState) {
            if ((this.StartSessionOperationCompleted == null)) {
                this.StartSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartSessionOperationCompleted);
            }
            this.InvokeAsync("StartSession", new object[] {
                        user,
                        pass}, this.StartSessionOperationCompleted, userState);
        }
        
        private void OnStartSessionOperationCompleted(object arg) {
            if ((this.StartSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartSessionCompleted(this, new StartSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#EndSession", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error EndSession(int access_key) {
            object[] results = this.Invoke("EndSession", new object[] {
                        access_key});
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void EndSessionAsync(int access_key) {
            this.EndSessionAsync(access_key, null);
        }
        
        /// <remarks/>
        public void EndSessionAsync(int access_key, object userState) {
            if ((this.EndSessionOperationCompleted == null)) {
                this.EndSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndSessionOperationCompleted);
            }
            this.InvokeAsync("EndSession", new object[] {
                        access_key}, this.EndSessionOperationCompleted, userState);
        }
        
        private void OnEndSessionOperationCompleted(object arg) {
            if ((this.EndSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndSessionCompleted(this, new EndSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetTransaction", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetTransaction(int access_key, string type, int flags, string number, out string trans_xml) {
            object[] results = this.Invoke("GetTransaction", new object[] {
                        access_key,
                        type,
                        flags,
                        number});
            trans_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionAsync(int access_key, string type, int flags, string number) {
            this.GetTransactionAsync(access_key, type, flags, number, null);
        }
        
        /// <remarks/>
        public void GetTransactionAsync(int access_key, string type, int flags, string number, object userState) {
            if ((this.GetTransactionOperationCompleted == null)) {
                this.GetTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionOperationCompleted);
            }
            this.InvokeAsync("GetTransaction", new object[] {
                        access_key,
                        type,
                        flags,
                        number}, this.GetTransactionOperationCompleted, userState);
        }
        
        private void OnGetTransactionOperationCompleted(object arg) {
            if ((this.GetTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionCompleted(this, new GetTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SetTransaction", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SetTransaction(int access_key, string type, int flags, string trans_xml, out string error_desc) {
            object[] results = this.Invoke("SetTransaction", new object[] {
                        access_key,
                        type,
                        flags,
                        trans_xml});
            error_desc = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SetTransactionAsync(int access_key, string type, int flags, string trans_xml) {
            this.SetTransactionAsync(access_key, type, flags, trans_xml, null);
        }
        
        /// <remarks/>
        public void SetTransactionAsync(int access_key, string type, int flags, string trans_xml, object userState) {
            if ((this.SetTransactionOperationCompleted == null)) {
                this.SetTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTransactionOperationCompleted);
            }
            this.InvokeAsync("SetTransaction", new object[] {
                        access_key,
                        type,
                        flags,
                        trans_xml}, this.SetTransactionOperationCompleted, userState);
        }
        
        private void OnSetTransactionOperationCompleted(object arg) {
            if ((this.SetTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTransactionCompleted(this, new SetTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetTransRangeByDate", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetTransRangeByDate(int access_key, string type, string start_date, string end_date, int flags, out string trans_list_xml) {
            object[] results = this.Invoke("GetTransRangeByDate", new object[] {
                        access_key,
                        type,
                        start_date,
                        end_date,
                        flags});
            trans_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransRangeByDateAsync(int access_key, string type, string start_date, string end_date, int flags) {
            this.GetTransRangeByDateAsync(access_key, type, start_date, end_date, flags, null);
        }
        
        /// <remarks/>
        public void GetTransRangeByDateAsync(int access_key, string type, string start_date, string end_date, int flags, object userState) {
            if ((this.GetTransRangeByDateOperationCompleted == null)) {
                this.GetTransRangeByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransRangeByDateOperationCompleted);
            }
            this.InvokeAsync("GetTransRangeByDate", new object[] {
                        access_key,
                        type,
                        start_date,
                        end_date,
                        flags}, this.GetTransRangeByDateOperationCompleted, userState);
        }
        
        private void OnGetTransRangeByDateOperationCompleted(object arg) {
            if ((this.GetTransRangeByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransRangeByDateCompleted(this, new GetTransRangeByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#DeleteTransaction", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error DeleteTransaction(int access_key, string type, string number) {
            object[] results = this.Invoke("DeleteTransaction", new object[] {
                        access_key,
                        type,
                        number});
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTransactionAsync(int access_key, string type, string number) {
            this.DeleteTransactionAsync(access_key, type, number, null);
        }
        
        /// <remarks/>
        public void DeleteTransactionAsync(int access_key, string type, string number, object userState) {
            if ((this.DeleteTransactionOperationCompleted == null)) {
                this.DeleteTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTransactionOperationCompleted);
            }
            this.InvokeAsync("DeleteTransaction", new object[] {
                        access_key,
                        type,
                        number}, this.DeleteTransactionOperationCompleted, userState);
        }
        
        private void OnDeleteTransactionOperationCompleted(object arg) {
            if ((this.DeleteTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTransactionCompleted(this, new DeleteTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#RenameTransaction", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error RenameTransaction(int access_key, string type, string number, string new_name) {
            object[] results = this.Invoke("RenameTransaction", new object[] {
                        access_key,
                        type,
                        number,
                        new_name});
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void RenameTransactionAsync(int access_key, string type, string number, string new_name) {
            this.RenameTransactionAsync(access_key, type, number, new_name, null);
        }
        
        /// <remarks/>
        public void RenameTransactionAsync(int access_key, string type, string number, string new_name, object userState) {
            if ((this.RenameTransactionOperationCompleted == null)) {
                this.RenameTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameTransactionOperationCompleted);
            }
            this.InvokeAsync("RenameTransaction", new object[] {
                        access_key,
                        type,
                        number,
                        new_name}, this.RenameTransactionOperationCompleted, userState);
        }
        
        private void OnRenameTransactionOperationCompleted(object arg) {
            if ((this.RenameTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameTransactionCompleted(this, new RenameTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetWorkingPorts", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetWorkingPorts(out string ports_list_xml) {
            object[] results = this.Invoke("GetWorkingPorts", new object[0]);
            ports_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkingPortsAsync() {
            this.GetWorkingPortsAsync(null);
        }
        
        /// <remarks/>
        public void GetWorkingPortsAsync(object userState) {
            if ((this.GetWorkingPortsOperationCompleted == null)) {
                this.GetWorkingPortsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkingPortsOperationCompleted);
            }
            this.InvokeAsync("GetWorkingPorts", new object[0], this.GetWorkingPortsOperationCompleted, userState);
        }
        
        private void OnGetWorkingPortsOperationCompleted(object arg) {
            if ((this.GetWorkingPortsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkingPortsCompleted(this, new GetWorkingPortsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetTripSchedule", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetTripSchedule(string arr_start_date, string arr_end_date, string dep_start_date, string dep_end_date, string org_port, string dest_port, out string trip_list_xml) {
            object[] results = this.Invoke("GetTripSchedule", new object[] {
                        arr_start_date,
                        arr_end_date,
                        dep_start_date,
                        dep_end_date,
                        org_port,
                        dest_port});
            trip_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetTripScheduleAsync(string arr_start_date, string arr_end_date, string dep_start_date, string dep_end_date, string org_port, string dest_port) {
            this.GetTripScheduleAsync(arr_start_date, arr_end_date, dep_start_date, dep_end_date, org_port, dest_port, null);
        }
        
        /// <remarks/>
        public void GetTripScheduleAsync(string arr_start_date, string arr_end_date, string dep_start_date, string dep_end_date, string org_port, string dest_port, object userState) {
            if ((this.GetTripScheduleOperationCompleted == null)) {
                this.GetTripScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTripScheduleOperationCompleted);
            }
            this.InvokeAsync("GetTripSchedule", new object[] {
                        arr_start_date,
                        arr_end_date,
                        dep_start_date,
                        dep_end_date,
                        org_port,
                        dest_port}, this.GetTripScheduleOperationCompleted, userState);
        }
        
        private void OnGetTripScheduleOperationCompleted(object arg) {
            if ((this.GetTripScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTripScheduleCompleted(this, new GetTripScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#BookingRequest", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error BookingRequest(string booking_xml, string trip_uuid, out string booking_number, out string result_string) {
            object[] results = this.Invoke("BookingRequest", new object[] {
                        booking_xml,
                        trip_uuid});
            booking_number = ((string)(results[1]));
            result_string = ((string)(results[2]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void BookingRequestAsync(string booking_xml, string trip_uuid) {
            this.BookingRequestAsync(booking_xml, trip_uuid, null);
        }
        
        /// <remarks/>
        public void BookingRequestAsync(string booking_xml, string trip_uuid, object userState) {
            if ((this.BookingRequestOperationCompleted == null)) {
                this.BookingRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookingRequestOperationCompleted);
            }
            this.InvokeAsync("BookingRequest", new object[] {
                        booking_xml,
                        trip_uuid}, this.BookingRequestOperationCompleted, userState);
        }
        
        private void OnBookingRequestOperationCompleted(object arg) {
            if ((this.BookingRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookingRequestCompleted(this, new BookingRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#StartTracking2", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int StartTracking2(string login, string password, out int services, out string company_info, out string user_info, out int cookie) {
            object[] results = this.Invoke("StartTracking2", new object[] {
                        login,
                        password});
            services = ((int)(results[1]));
            company_info = ((string)(results[2]));
            user_info = ((string)(results[3]));
            cookie = ((int)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void StartTracking2Async(string login, string password) {
            this.StartTracking2Async(login, password, null);
        }
        
        /// <remarks/>
        public void StartTracking2Async(string login, string password, object userState) {
            if ((this.StartTracking2OperationCompleted == null)) {
                this.StartTracking2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartTracking2OperationCompleted);
            }
            this.InvokeAsync("StartTracking2", new object[] {
                        login,
                        password}, this.StartTracking2OperationCompleted, userState);
        }
        
        private void OnStartTracking2OperationCompleted(object arg) {
            if ((this.StartTracking2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartTracking2Completed(this, new StartTracking2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetPackageTypes", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetPackageTypes(out string pack_list_xml) {
            object[] results = this.Invoke("GetPackageTypes", new object[0]);
            pack_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageTypesAsync() {
            this.GetPackageTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetPackageTypesAsync(object userState) {
            if ((this.GetPackageTypesOperationCompleted == null)) {
                this.GetPackageTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageTypesOperationCompleted);
            }
            this.InvokeAsync("GetPackageTypes", new object[0], this.GetPackageTypesOperationCompleted, userState);
        }
        
        private void OnGetPackageTypesOperationCompleted(object arg) {
            if ((this.GetPackageTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageTypesCompleted(this, new GetPackageTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#CancelBooking", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error CancelBooking(string booking_uuid) {
            object[] results = this.Invoke("CancelBooking", new object[] {
                        booking_uuid});
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void CancelBookingAsync(string booking_uuid) {
            this.CancelBookingAsync(booking_uuid, null);
        }
        
        /// <remarks/>
        public void CancelBookingAsync(string booking_uuid, object userState) {
            if ((this.CancelBookingOperationCompleted == null)) {
                this.CancelBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelBookingOperationCompleted);
            }
            this.InvokeAsync("CancelBooking", new object[] {
                        booking_uuid}, this.CancelBookingOperationCompleted, userState);
        }
        
        private void OnCancelBookingOperationCompleted(object arg) {
            if ((this.CancelBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelBookingCompleted(this, new CancelBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetCustomFieldDefinitions", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetCustomFieldDefinitions(string type, out string field_list_xml) {
            object[] results = this.Invoke("GetCustomFieldDefinitions", new object[] {
                        type});
            field_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomFieldDefinitionsAsync(string type) {
            this.GetCustomFieldDefinitionsAsync(type, null);
        }
        
        /// <remarks/>
        public void GetCustomFieldDefinitionsAsync(string type, object userState) {
            if ((this.GetCustomFieldDefinitionsOperationCompleted == null)) {
                this.GetCustomFieldDefinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomFieldDefinitionsOperationCompleted);
            }
            this.InvokeAsync("GetCustomFieldDefinitions", new object[] {
                        type}, this.GetCustomFieldDefinitionsOperationCompleted, userState);
        }
        
        private void OnGetCustomFieldDefinitionsOperationCompleted(object arg) {
            if ((this.GetCustomFieldDefinitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomFieldDefinitionsCompleted(this, new GetCustomFieldDefinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetItemFromVIN", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetItemFromVIN(int access_key, string vin, out string item_xml) {
            object[] results = this.Invoke("GetItemFromVIN", new object[] {
                        access_key,
                        vin});
            item_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemFromVINAsync(int access_key, string vin) {
            this.GetItemFromVINAsync(access_key, vin, null);
        }
        
        /// <remarks/>
        public void GetItemFromVINAsync(int access_key, string vin, object userState) {
            if ((this.GetItemFromVINOperationCompleted == null)) {
                this.GetItemFromVINOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemFromVINOperationCompleted);
            }
            this.InvokeAsync("GetItemFromVIN", new object[] {
                        access_key,
                        vin}, this.GetItemFromVINOperationCompleted, userState);
        }
        
        private void OnGetItemFromVINOperationCompleted(object arg) {
            if ((this.GetItemFromVINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemFromVINCompleted(this, new GetItemFromVINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SetShipmentStatus", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SetShipmentStatus(int access_key, string status, string shipment_uuid) {
            object[] results = this.Invoke("SetShipmentStatus", new object[] {
                        access_key,
                        status,
                        shipment_uuid});
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SetShipmentStatusAsync(int access_key, string status, string shipment_uuid) {
            this.SetShipmentStatusAsync(access_key, status, shipment_uuid, null);
        }
        
        /// <remarks/>
        public void SetShipmentStatusAsync(int access_key, string status, string shipment_uuid, object userState) {
            if ((this.SetShipmentStatusOperationCompleted == null)) {
                this.SetShipmentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetShipmentStatusOperationCompleted);
            }
            this.InvokeAsync("SetShipmentStatus", new object[] {
                        access_key,
                        status,
                        shipment_uuid}, this.SetShipmentStatusOperationCompleted, userState);
        }
        
        private void OnSetShipmentStatusOperationCompleted(object arg) {
            if ((this.SetShipmentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetShipmentStatusCompleted(this, new SetShipmentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetMagayaDocument", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetMagayaDocument(string filename, out string attach_xml, out string error) {
            object[] results = this.Invoke("GetMagayaDocument", new object[] {
                        filename});
            attach_xml = ((string)(results[1]));
            error = ((string)(results[2]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetMagayaDocumentAsync(string filename) {
            this.GetMagayaDocumentAsync(filename, null);
        }
        
        /// <remarks/>
        public void GetMagayaDocumentAsync(string filename, object userState) {
            if ((this.GetMagayaDocumentOperationCompleted == null)) {
                this.GetMagayaDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMagayaDocumentOperationCompleted);
            }
            this.InvokeAsync("GetMagayaDocument", new object[] {
                        filename}, this.GetMagayaDocumentOperationCompleted, userState);
        }
        
        private void OnGetMagayaDocumentOperationCompleted(object arg) {
            if ((this.GetMagayaDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMagayaDocumentCompleted(this, new GetMagayaDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetAccountingTransactions", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetAccountingTransactions(int access_key, string type, int flags, string number, out string trans_xml) {
            object[] results = this.Invoke("GetAccountingTransactions", new object[] {
                        access_key,
                        type,
                        flags,
                        number});
            trans_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountingTransactionsAsync(int access_key, string type, int flags, string number) {
            this.GetAccountingTransactionsAsync(access_key, type, flags, number, null);
        }
        
        /// <remarks/>
        public void GetAccountingTransactionsAsync(int access_key, string type, int flags, string number, object userState) {
            if ((this.GetAccountingTransactionsOperationCompleted == null)) {
                this.GetAccountingTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountingTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetAccountingTransactions", new object[] {
                        access_key,
                        type,
                        flags,
                        number}, this.GetAccountingTransactionsOperationCompleted, userState);
        }
        
        private void OnGetAccountingTransactionsOperationCompleted(object arg) {
            if ((this.GetAccountingTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountingTransactionsCompleted(this, new GetAccountingTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetRelatedTransactions", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetRelatedTransactions(int access_key, string type, int flags, string number, out string trans_xml) {
            object[] results = this.Invoke("GetRelatedTransactions", new object[] {
                        access_key,
                        type,
                        flags,
                        number});
            trans_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelatedTransactionsAsync(int access_key, string type, int flags, string number) {
            this.GetRelatedTransactionsAsync(access_key, type, flags, number, null);
        }
        
        /// <remarks/>
        public void GetRelatedTransactionsAsync(int access_key, string type, int flags, string number, object userState) {
            if ((this.GetRelatedTransactionsOperationCompleted == null)) {
                this.GetRelatedTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelatedTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetRelatedTransactions", new object[] {
                        access_key,
                        type,
                        flags,
                        number}, this.GetRelatedTransactionsOperationCompleted, userState);
        }
        
        private void OnGetRelatedTransactionsOperationCompleted(object arg) {
            if ((this.GetRelatedTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelatedTransactionsCompleted(this, new GetRelatedTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetAccountDefinitions", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetAccountDefinitions(int access_key, out string account_list_xml) {
            object[] results = this.Invoke("GetAccountDefinitions", new object[] {
                        access_key});
            account_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountDefinitionsAsync(int access_key) {
            this.GetAccountDefinitionsAsync(access_key, null);
        }
        
        /// <remarks/>
        public void GetAccountDefinitionsAsync(int access_key, object userState) {
            if ((this.GetAccountDefinitionsOperationCompleted == null)) {
                this.GetAccountDefinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountDefinitionsOperationCompleted);
            }
            this.InvokeAsync("GetAccountDefinitions", new object[] {
                        access_key}, this.GetAccountDefinitionsOperationCompleted, userState);
        }
        
        private void OnGetAccountDefinitionsOperationCompleted(object arg) {
            if ((this.GetAccountDefinitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountDefinitionsCompleted(this, new GetAccountDefinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetChargeDefinitions", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetChargeDefinitions(int access_key, out string service_list_xml) {
            object[] results = this.Invoke("GetChargeDefinitions", new object[] {
                        access_key});
            service_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetChargeDefinitionsAsync(int access_key) {
            this.GetChargeDefinitionsAsync(access_key, null);
        }
        
        /// <remarks/>
        public void GetChargeDefinitionsAsync(int access_key, object userState) {
            if ((this.GetChargeDefinitionsOperationCompleted == null)) {
                this.GetChargeDefinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChargeDefinitionsOperationCompleted);
            }
            this.InvokeAsync("GetChargeDefinitions", new object[] {
                        access_key}, this.GetChargeDefinitionsOperationCompleted, userState);
        }
        
        private void OnGetChargeDefinitionsOperationCompleted(object arg) {
            if ((this.GetChargeDefinitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChargeDefinitionsCompleted(this, new GetChargeDefinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetActiveCurrencies", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetActiveCurrencies(int access_key, out string currency_list_xml) {
            object[] results = this.Invoke("GetActiveCurrencies", new object[] {
                        access_key});
            currency_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveCurrenciesAsync(int access_key) {
            this.GetActiveCurrenciesAsync(access_key, null);
        }
        
        /// <remarks/>
        public void GetActiveCurrenciesAsync(int access_key, object userState) {
            if ((this.GetActiveCurrenciesOperationCompleted == null)) {
                this.GetActiveCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveCurrenciesOperationCompleted);
            }
            this.InvokeAsync("GetActiveCurrencies", new object[] {
                        access_key}, this.GetActiveCurrenciesOperationCompleted, userState);
        }
        
        private void OnGetActiveCurrenciesOperationCompleted(object arg) {
            if ((this.GetActiveCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveCurrenciesCompleted(this, new GetActiveCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#QueryLog", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error QueryLog(int access_key, string start_date, string end_date, int log_entry_type, string trans_type, int flags, out string trans_list_xml) {
            object[] results = this.Invoke("QueryLog", new object[] {
                        access_key,
                        start_date,
                        end_date,
                        log_entry_type,
                        trans_type,
                        flags});
            trans_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void QueryLogAsync(int access_key, string start_date, string end_date, int log_entry_type, string trans_type, int flags) {
            this.QueryLogAsync(access_key, start_date, end_date, log_entry_type, trans_type, flags, null);
        }
        
        /// <remarks/>
        public void QueryLogAsync(int access_key, string start_date, string end_date, int log_entry_type, string trans_type, int flags, object userState) {
            if ((this.QueryLogOperationCompleted == null)) {
                this.QueryLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryLogOperationCompleted);
            }
            this.InvokeAsync("QueryLog", new object[] {
                        access_key,
                        start_date,
                        end_date,
                        log_entry_type,
                        trans_type,
                        flags}, this.QueryLogOperationCompleted, userState);
        }
        
        private void OnQueryLogOperationCompleted(object arg) {
            if ((this.QueryLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryLogCompleted(this, new QueryLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetPODData", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("pod_xml")]
        public string GetPODData(string app, string trans_uuid) {
            object[] results = this.Invoke("GetPODData", new object[] {
                        app,
                        trans_uuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPODDataAsync(string app, string trans_uuid) {
            this.GetPODDataAsync(app, trans_uuid, null);
        }
        
        /// <remarks/>
        public void GetPODDataAsync(string app, string trans_uuid, object userState) {
            if ((this.GetPODDataOperationCompleted == null)) {
                this.GetPODDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPODDataOperationCompleted);
            }
            this.InvokeAsync("GetPODData", new object[] {
                        app,
                        trans_uuid}, this.GetPODDataOperationCompleted, userState);
        }
        
        private void OnGetPODDataOperationCompleted(object arg) {
            if ((this.GetPODDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPODDataCompleted(this, new GetPODDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetClientRates", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetClientRates(int access_key, string client_uuid, string org_port, string dest_port, string method, int include_standard, out string rate_list_xml) {
            object[] results = this.Invoke("GetClientRates", new object[] {
                        access_key,
                        client_uuid,
                        org_port,
                        dest_port,
                        method,
                        include_standard});
            rate_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientRatesAsync(int access_key, string client_uuid, string org_port, string dest_port, string method, int include_standard) {
            this.GetClientRatesAsync(access_key, client_uuid, org_port, dest_port, method, include_standard, null);
        }
        
        /// <remarks/>
        public void GetClientRatesAsync(int access_key, string client_uuid, string org_port, string dest_port, string method, int include_standard, object userState) {
            if ((this.GetClientRatesOperationCompleted == null)) {
                this.GetClientRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientRatesOperationCompleted);
            }
            this.InvokeAsync("GetClientRates", new object[] {
                        access_key,
                        client_uuid,
                        org_port,
                        dest_port,
                        method,
                        include_standard}, this.GetClientRatesOperationCompleted, userState);
        }
        
        private void OnGetClientRatesOperationCompleted(object arg) {
            if ((this.GetClientRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientRatesCompleted(this, new GetClientRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetStandardRates", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetStandardRates(int access_key, string org_port, string dest_port, string method, out string rate_list_xml) {
            object[] results = this.Invoke("GetStandardRates", new object[] {
                        access_key,
                        org_port,
                        dest_port,
                        method});
            rate_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetStandardRatesAsync(int access_key, string org_port, string dest_port, string method) {
            this.GetStandardRatesAsync(access_key, org_port, dest_port, method, null);
        }
        
        /// <remarks/>
        public void GetStandardRatesAsync(int access_key, string org_port, string dest_port, string method, object userState) {
            if ((this.GetStandardRatesOperationCompleted == null)) {
                this.GetStandardRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStandardRatesOperationCompleted);
            }
            this.InvokeAsync("GetStandardRates", new object[] {
                        access_key,
                        org_port,
                        dest_port,
                        method}, this.GetStandardRatesOperationCompleted, userState);
        }
        
        private void OnGetStandardRatesOperationCompleted(object arg) {
            if ((this.GetStandardRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStandardRatesCompleted(this, new GetStandardRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetClientChargeDefinitions", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetClientChargeDefinitions(int access_key, string client_uuid, out string charge_list_xml) {
            object[] results = this.Invoke("GetClientChargeDefinitions", new object[] {
                        access_key,
                        client_uuid});
            charge_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientChargeDefinitionsAsync(int access_key, string client_uuid) {
            this.GetClientChargeDefinitionsAsync(access_key, client_uuid, null);
        }
        
        /// <remarks/>
        public void GetClientChargeDefinitionsAsync(int access_key, string client_uuid, object userState) {
            if ((this.GetClientChargeDefinitionsOperationCompleted == null)) {
                this.GetClientChargeDefinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientChargeDefinitionsOperationCompleted);
            }
            this.InvokeAsync("GetClientChargeDefinitions", new object[] {
                        access_key,
                        client_uuid}, this.GetClientChargeDefinitionsOperationCompleted, userState);
        }
        
        private void OnGetClientChargeDefinitionsOperationCompleted(object arg) {
            if ((this.GetClientChargeDefinitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientChargeDefinitionsCompleted(this, new GetClientChargeDefinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SetRate", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SetRate(int access_key, int flags, string rate_xml, out string error_desc) {
            object[] results = this.Invoke("SetRate", new object[] {
                        access_key,
                        flags,
                        rate_xml});
            error_desc = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SetRateAsync(int access_key, int flags, string rate_xml) {
            this.SetRateAsync(access_key, flags, rate_xml, null);
        }
        
        /// <remarks/>
        public void SetRateAsync(int access_key, int flags, string rate_xml, object userState) {
            if ((this.SetRateOperationCompleted == null)) {
                this.SetRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRateOperationCompleted);
            }
            this.InvokeAsync("SetRate", new object[] {
                        access_key,
                        flags,
                        rate_xml}, this.SetRateOperationCompleted, userState);
        }
        
        private void OnSetRateOperationCompleted(object arg) {
            if ((this.SetRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRateCompleted(this, new SetRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SetEntity", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SetEntity(int access_key, int flags, string entity_xml, out string error_desc) {
            object[] results = this.Invoke("SetEntity", new object[] {
                        access_key,
                        flags,
                        entity_xml});
            error_desc = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SetEntityAsync(int access_key, int flags, string entity_xml) {
            this.SetEntityAsync(access_key, flags, entity_xml, null);
        }
        
        /// <remarks/>
        public void SetEntityAsync(int access_key, int flags, string entity_xml, object userState) {
            if ((this.SetEntityOperationCompleted == null)) {
                this.SetEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEntityOperationCompleted);
            }
            this.InvokeAsync("SetEntity", new object[] {
                        access_key,
                        flags,
                        entity_xml}, this.SetEntityOperationCompleted, userState);
        }
        
        private void OnSetEntityOperationCompleted(object arg) {
            if ((this.SetEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEntityCompleted(this, new SetEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetEntities", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetEntities(int access_key, int flags, string start_with, out string entity_list_xml) {
            object[] results = this.Invoke("GetEntities", new object[] {
                        access_key,
                        flags,
                        start_with});
            entity_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntitiesAsync(int access_key, int flags, string start_with) {
            this.GetEntitiesAsync(access_key, flags, start_with, null);
        }
        
        /// <remarks/>
        public void GetEntitiesAsync(int access_key, int flags, string start_with, object userState) {
            if ((this.GetEntitiesOperationCompleted == null)) {
                this.GetEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntitiesOperationCompleted);
            }
            this.InvokeAsync("GetEntities", new object[] {
                        access_key,
                        flags,
                        start_with}, this.GetEntitiesOperationCompleted, userState);
        }
        
        private void OnGetEntitiesOperationCompleted(object arg) {
            if ((this.GetEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntitiesCompleted(this, new GetEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetEntityContacts", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetEntityContacts(int access_key, int flags, string entity_uuid, out string contact_list_xml) {
            object[] results = this.Invoke("GetEntityContacts", new object[] {
                        access_key,
                        flags,
                        entity_uuid});
            contact_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntityContactsAsync(int access_key, int flags, string entity_uuid) {
            this.GetEntityContactsAsync(access_key, flags, entity_uuid, null);
        }
        
        /// <remarks/>
        public void GetEntityContactsAsync(int access_key, int flags, string entity_uuid, object userState) {
            if ((this.GetEntityContactsOperationCompleted == null)) {
                this.GetEntityContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntityContactsOperationCompleted);
            }
            this.InvokeAsync("GetEntityContacts", new object[] {
                        access_key,
                        flags,
                        entity_uuid}, this.GetEntityContactsOperationCompleted, userState);
        }
        
        private void OnGetEntityContactsOperationCompleted(object arg) {
            if ((this.GetEntityContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntityContactsCompleted(this, new GetEntityContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SubmitSalesOrder", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SubmitSalesOrder(int access_key, string sales_order_xml, int flags, out string sales_order_number, out string result_string) {
            object[] results = this.Invoke("SubmitSalesOrder", new object[] {
                        access_key,
                        sales_order_xml,
                        flags});
            sales_order_number = ((string)(results[1]));
            result_string = ((string)(results[2]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitSalesOrderAsync(int access_key, string sales_order_xml, int flags) {
            this.SubmitSalesOrderAsync(access_key, sales_order_xml, flags, null);
        }
        
        /// <remarks/>
        public void SubmitSalesOrderAsync(int access_key, string sales_order_xml, int flags, object userState) {
            if ((this.SubmitSalesOrderOperationCompleted == null)) {
                this.SubmitSalesOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitSalesOrderOperationCompleted);
            }
            this.InvokeAsync("SubmitSalesOrder", new object[] {
                        access_key,
                        sales_order_xml,
                        flags}, this.SubmitSalesOrderOperationCompleted, userState);
        }
        
        private void OnSubmitSalesOrderOperationCompleted(object arg) {
            if ((this.SubmitSalesOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitSalesOrderCompleted(this, new SubmitSalesOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SubmitCargoRelease", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SubmitCargoRelease(int access_key, string cargo_release_xml, int flags, out string cargo_release_number, out string result_string) {
            object[] results = this.Invoke("SubmitCargoRelease", new object[] {
                        access_key,
                        cargo_release_xml,
                        flags});
            cargo_release_number = ((string)(results[1]));
            result_string = ((string)(results[2]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitCargoReleaseAsync(int access_key, string cargo_release_xml, int flags) {
            this.SubmitCargoReleaseAsync(access_key, cargo_release_xml, flags, null);
        }
        
        /// <remarks/>
        public void SubmitCargoReleaseAsync(int access_key, string cargo_release_xml, int flags, object userState) {
            if ((this.SubmitCargoReleaseOperationCompleted == null)) {
                this.SubmitCargoReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitCargoReleaseOperationCompleted);
            }
            this.InvokeAsync("SubmitCargoRelease", new object[] {
                        access_key,
                        cargo_release_xml,
                        flags}, this.SubmitCargoReleaseOperationCompleted, userState);
        }
        
        private void OnSubmitCargoReleaseOperationCompleted(object arg) {
            if ((this.SubmitCargoReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitCargoReleaseCompleted(this, new SubmitCargoReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SubmitShipment", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SubmitShipment(int access_key, string shipment_xml, int flags, out string shipment_number, out string result_string) {
            object[] results = this.Invoke("SubmitShipment", new object[] {
                        access_key,
                        shipment_xml,
                        flags});
            shipment_number = ((string)(results[1]));
            result_string = ((string)(results[2]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitShipmentAsync(int access_key, string shipment_xml, int flags) {
            this.SubmitShipmentAsync(access_key, shipment_xml, flags, null);
        }
        
        /// <remarks/>
        public void SubmitShipmentAsync(int access_key, string shipment_xml, int flags, object userState) {
            if ((this.SubmitShipmentOperationCompleted == null)) {
                this.SubmitShipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitShipmentOperationCompleted);
            }
            this.InvokeAsync("SubmitShipment", new object[] {
                        access_key,
                        shipment_xml,
                        flags}, this.SubmitShipmentOperationCompleted, userState);
        }
        
        private void OnSubmitShipmentOperationCompleted(object arg) {
            if ((this.SubmitShipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitShipmentCompleted(this, new SubmitShipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetEventDefinitions", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetEventDefinitions(int access_key, out string event_definition_list_xml) {
            object[] results = this.Invoke("GetEventDefinitions", new object[] {
                        access_key});
            event_definition_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventDefinitionsAsync(int access_key) {
            this.GetEventDefinitionsAsync(access_key, null);
        }
        
        /// <remarks/>
        public void GetEventDefinitionsAsync(int access_key, object userState) {
            if ((this.GetEventDefinitionsOperationCompleted == null)) {
                this.GetEventDefinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventDefinitionsOperationCompleted);
            }
            this.InvokeAsync("GetEventDefinitions", new object[] {
                        access_key}, this.GetEventDefinitionsOperationCompleted, userState);
        }
        
        private void OnGetEventDefinitionsOperationCompleted(object arg) {
            if ((this.GetEventDefinitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventDefinitionsCompleted(this, new GetEventDefinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SetTransactionEvents", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SetTransactionEvents(int access_key, int flags, string type, string number, string event_list_xml, out string error_desc) {
            object[] results = this.Invoke("SetTransactionEvents", new object[] {
                        access_key,
                        flags,
                        type,
                        number,
                        event_list_xml});
            error_desc = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SetTransactionEventsAsync(int access_key, int flags, string type, string number, string event_list_xml) {
            this.SetTransactionEventsAsync(access_key, flags, type, number, event_list_xml, null);
        }
        
        /// <remarks/>
        public void SetTransactionEventsAsync(int access_key, int flags, string type, string number, string event_list_xml, object userState) {
            if ((this.SetTransactionEventsOperationCompleted == null)) {
                this.SetTransactionEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTransactionEventsOperationCompleted);
            }
            this.InvokeAsync("SetTransactionEvents", new object[] {
                        access_key,
                        flags,
                        type,
                        number,
                        event_list_xml}, this.SetTransactionEventsOperationCompleted, userState);
        }
        
        private void OnSetTransactionEventsOperationCompleted(object arg) {
            if ((this.SetTransactionEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTransactionEventsCompleted(this, new SetTransactionEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#UpdateOrder", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error UpdateOrder(int access_key, int flags, string order_xml, out string error_desc) {
            object[] results = this.Invoke("UpdateOrder", new object[] {
                        access_key,
                        flags,
                        order_xml});
            error_desc = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrderAsync(int access_key, int flags, string order_xml) {
            this.UpdateOrderAsync(access_key, flags, order_xml, null);
        }
        
        /// <remarks/>
        public void UpdateOrderAsync(int access_key, int flags, string order_xml, object userState) {
            if ((this.UpdateOrderOperationCompleted == null)) {
                this.UpdateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderOperationCompleted);
            }
            this.InvokeAsync("UpdateOrder", new object[] {
                        access_key,
                        flags,
                        order_xml}, this.UpdateOrderOperationCompleted, userState);
        }
        
        private void OnUpdateOrderOperationCompleted(object arg) {
            if ((this.UpdateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderCompleted(this, new UpdateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SetCustomFieldValue", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SetCustomFieldValue(int access_key, string type, string number, string field_internal_name, string field_value) {
            object[] results = this.Invoke("SetCustomFieldValue", new object[] {
                        access_key,
                        type,
                        number,
                        field_internal_name,
                        field_value});
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SetCustomFieldValueAsync(int access_key, string type, string number, string field_internal_name, string field_value) {
            this.SetCustomFieldValueAsync(access_key, type, number, field_internal_name, field_value, null);
        }
        
        /// <remarks/>
        public void SetCustomFieldValueAsync(int access_key, string type, string number, string field_internal_name, string field_value, object userState) {
            if ((this.SetCustomFieldValueOperationCompleted == null)) {
                this.SetCustomFieldValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCustomFieldValueOperationCompleted);
            }
            this.InvokeAsync("SetCustomFieldValue", new object[] {
                        access_key,
                        type,
                        number,
                        field_internal_name,
                        field_value}, this.SetCustomFieldValueOperationCompleted, userState);
        }
        
        private void OnSetCustomFieldValueOperationCompleted(object arg) {
            if ((this.SetCustomFieldValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCustomFieldValueCompleted(this, new SetCustomFieldValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SetApprovalStatus", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SetApprovalStatus(int access_key, string type, string number, int status) {
            object[] results = this.Invoke("SetApprovalStatus", new object[] {
                        access_key,
                        type,
                        number,
                        status});
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SetApprovalStatusAsync(int access_key, string type, string number, int status) {
            this.SetApprovalStatusAsync(access_key, type, number, status, null);
        }
        
        /// <remarks/>
        public void SetApprovalStatusAsync(int access_key, string type, string number, int status, object userState) {
            if ((this.SetApprovalStatusOperationCompleted == null)) {
                this.SetApprovalStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetApprovalStatusOperationCompleted);
            }
            this.InvokeAsync("SetApprovalStatus", new object[] {
                        access_key,
                        type,
                        number,
                        status}, this.SetApprovalStatusOperationCompleted, userState);
        }
        
        private void OnSetApprovalStatusOperationCompleted(object arg) {
            if ((this.SetApprovalStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetApprovalStatusCompleted(this, new SetApprovalStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetCarrierRates", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetCarrierRates(int access_key, string carrier_uuid, string org_port, string dest_port, string method, out string rate_list_xml) {
            object[] results = this.Invoke("GetCarrierRates", new object[] {
                        access_key,
                        carrier_uuid,
                        org_port,
                        dest_port,
                        method});
            rate_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetCarrierRatesAsync(int access_key, string carrier_uuid, string org_port, string dest_port, string method) {
            this.GetCarrierRatesAsync(access_key, carrier_uuid, org_port, dest_port, method, null);
        }
        
        /// <remarks/>
        public void GetCarrierRatesAsync(int access_key, string carrier_uuid, string org_port, string dest_port, string method, object userState) {
            if ((this.GetCarrierRatesOperationCompleted == null)) {
                this.GetCarrierRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarrierRatesOperationCompleted);
            }
            this.InvokeAsync("GetCarrierRates", new object[] {
                        access_key,
                        carrier_uuid,
                        org_port,
                        dest_port,
                        method}, this.GetCarrierRatesOperationCompleted, userState);
        }
        
        private void OnGetCarrierRatesOperationCompleted(object arg) {
            if ((this.GetCarrierRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarrierRatesCompleted(this, new GetCarrierRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetEntityTransactions", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetEntityTransactions(int access_key, string entity_uuid, int flags, string start_date, string end_date, out string acctrans_list_xml) {
            object[] results = this.Invoke("GetEntityTransactions", new object[] {
                        access_key,
                        entity_uuid,
                        flags,
                        start_date,
                        end_date});
            acctrans_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntityTransactionsAsync(int access_key, string entity_uuid, int flags, string start_date, string end_date) {
            this.GetEntityTransactionsAsync(access_key, entity_uuid, flags, start_date, end_date, null);
        }
        
        /// <remarks/>
        public void GetEntityTransactionsAsync(int access_key, string entity_uuid, int flags, string start_date, string end_date, object userState) {
            if ((this.GetEntityTransactionsOperationCompleted == null)) {
                this.GetEntityTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntityTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetEntityTransactions", new object[] {
                        access_key,
                        entity_uuid,
                        flags,
                        start_date,
                        end_date}, this.GetEntityTransactionsOperationCompleted, userState);
        }
        
        private void OnGetEntityTransactionsOperationCompleted(object arg) {
            if ((this.GetEntityTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntityTransactionsCompleted(this, new GetEntityTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#QueryLogJS", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error QueryLogJS(int access_key, string start_date, string end_date, int log_entry_type, string trans_type, string function, string xml_params, int log_flags, int xml_flags, out string trans_list_xml) {
            object[] results = this.Invoke("QueryLogJS", new object[] {
                        access_key,
                        start_date,
                        end_date,
                        log_entry_type,
                        trans_type,
                        function,
                        xml_params,
                        log_flags,
                        xml_flags});
            trans_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void QueryLogJSAsync(int access_key, string start_date, string end_date, int log_entry_type, string trans_type, string function, string xml_params, int log_flags, int xml_flags) {
            this.QueryLogJSAsync(access_key, start_date, end_date, log_entry_type, trans_type, function, xml_params, log_flags, xml_flags, null);
        }
        
        /// <remarks/>
        public void QueryLogJSAsync(int access_key, string start_date, string end_date, int log_entry_type, string trans_type, string function, string xml_params, int log_flags, int xml_flags, object userState) {
            if ((this.QueryLogJSOperationCompleted == null)) {
                this.QueryLogJSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryLogJSOperationCompleted);
            }
            this.InvokeAsync("QueryLogJS", new object[] {
                        access_key,
                        start_date,
                        end_date,
                        log_entry_type,
                        trans_type,
                        function,
                        xml_params,
                        log_flags,
                        xml_flags}, this.QueryLogJSOperationCompleted, userState);
        }
        
        private void OnQueryLogJSOperationCompleted(object arg) {
            if ((this.QueryLogJSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryLogJSCompleted(this, new QueryLogJSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#ExistsTransaction", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error ExistsTransaction(int access_key, string type, string number, out int exist_trans) {
            object[] results = this.Invoke("ExistsTransaction", new object[] {
                        access_key,
                        type,
                        number});
            exist_trans = ((int)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsTransactionAsync(int access_key, string type, string number) {
            this.ExistsTransactionAsync(access_key, type, number, null);
        }
        
        /// <remarks/>
        public void ExistsTransactionAsync(int access_key, string type, string number, object userState) {
            if ((this.ExistsTransactionOperationCompleted == null)) {
                this.ExistsTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsTransactionOperationCompleted);
            }
            this.InvokeAsync("ExistsTransaction", new object[] {
                        access_key,
                        type,
                        number}, this.ExistsTransactionOperationCompleted, userState);
        }
        
        private void OnExistsTransactionOperationCompleted(object arg) {
            if ((this.ExistsTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsTransactionCompleted(this, new ExistsTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetTransactionStatus", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetTransactionStatus(int access_key, string type, string number, out string trans_status) {
            object[] results = this.Invoke("GetTransactionStatus", new object[] {
                        access_key,
                        type,
                        number});
            trans_status = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionStatusAsync(int access_key, string type, string number) {
            this.GetTransactionStatusAsync(access_key, type, number, null);
        }
        
        /// <remarks/>
        public void GetTransactionStatusAsync(int access_key, string type, string number, object userState) {
            if ((this.GetTransactionStatusOperationCompleted == null)) {
                this.GetTransactionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionStatusOperationCompleted);
            }
            this.InvokeAsync("GetTransactionStatus", new object[] {
                        access_key,
                        type,
                        number}, this.GetTransactionStatusOperationCompleted, userState);
        }
        
        private void OnGetTransactionStatusOperationCompleted(object arg) {
            if ((this.GetTransactionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionStatusCompleted(this, new GetTransactionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SetTrackingUser", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SetTrackingUser(int access_key, string contact_uuid, string login, string password, string user_config_xml, int xml_flags) {
            object[] results = this.Invoke("SetTrackingUser", new object[] {
                        access_key,
                        contact_uuid,
                        login,
                        password,
                        user_config_xml,
                        xml_flags});
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SetTrackingUserAsync(int access_key, string contact_uuid, string login, string password, string user_config_xml, int xml_flags) {
            this.SetTrackingUserAsync(access_key, contact_uuid, login, password, user_config_xml, xml_flags, null);
        }
        
        /// <remarks/>
        public void SetTrackingUserAsync(int access_key, string contact_uuid, string login, string password, string user_config_xml, int xml_flags, object userState) {
            if ((this.SetTrackingUserOperationCompleted == null)) {
                this.SetTrackingUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTrackingUserOperationCompleted);
            }
            this.InvokeAsync("SetTrackingUser", new object[] {
                        access_key,
                        contact_uuid,
                        login,
                        password,
                        user_config_xml,
                        xml_flags}, this.SetTrackingUserOperationCompleted, userState);
        }
        
        private void OnSetTrackingUserOperationCompleted(object arg) {
            if ((this.SetTrackingUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTrackingUserCompleted(this, new SetTrackingUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetItemDefinitionsByCustomer", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetItemDefinitionsByCustomer(int access_key, string customer_uuid, int flags, out string def_list_xml) {
            object[] results = this.Invoke("GetItemDefinitionsByCustomer", new object[] {
                        access_key,
                        customer_uuid,
                        flags});
            def_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemDefinitionsByCustomerAsync(int access_key, string customer_uuid, int flags) {
            this.GetItemDefinitionsByCustomerAsync(access_key, customer_uuid, flags, null);
        }
        
        /// <remarks/>
        public void GetItemDefinitionsByCustomerAsync(int access_key, string customer_uuid, int flags, object userState) {
            if ((this.GetItemDefinitionsByCustomerOperationCompleted == null)) {
                this.GetItemDefinitionsByCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemDefinitionsByCustomerOperationCompleted);
            }
            this.InvokeAsync("GetItemDefinitionsByCustomer", new object[] {
                        access_key,
                        customer_uuid,
                        flags}, this.GetItemDefinitionsByCustomerOperationCompleted, userState);
        }
        
        private void OnGetItemDefinitionsByCustomerOperationCompleted(object arg) {
            if ((this.GetItemDefinitionsByCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemDefinitionsByCustomerCompleted(this, new GetItemDefinitionsByCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetInventoryItemsByItemDefinition", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetInventoryItemsByItemDefinition(int access_key, string uuid, int flags, out string item_list_xml) {
            object[] results = this.Invoke("GetInventoryItemsByItemDefinition", new object[] {
                        access_key,
                        uuid,
                        flags});
            item_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryItemsByItemDefinitionAsync(int access_key, string uuid, int flags) {
            this.GetInventoryItemsByItemDefinitionAsync(access_key, uuid, flags, null);
        }
        
        /// <remarks/>
        public void GetInventoryItemsByItemDefinitionAsync(int access_key, string uuid, int flags, object userState) {
            if ((this.GetInventoryItemsByItemDefinitionOperationCompleted == null)) {
                this.GetInventoryItemsByItemDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryItemsByItemDefinitionOperationCompleted);
            }
            this.InvokeAsync("GetInventoryItemsByItemDefinition", new object[] {
                        access_key,
                        uuid,
                        flags}, this.GetInventoryItemsByItemDefinitionOperationCompleted, userState);
        }
        
        private void OnGetInventoryItemsByItemDefinitionOperationCompleted(object arg) {
            if ((this.GetInventoryItemsByItemDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryItemsByItemDefinitionCompleted(this, new GetInventoryItemsByItemDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetTransactionsByBillingClient", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetTransactionsByBillingClient(int access_key, string customer_uuid, string type, string start_date, string end_date, int flags, out string trans_list_xml) {
            object[] results = this.Invoke("GetTransactionsByBillingClient", new object[] {
                        access_key,
                        customer_uuid,
                        type,
                        start_date,
                        end_date,
                        flags});
            trans_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionsByBillingClientAsync(int access_key, string customer_uuid, string type, string start_date, string end_date, int flags) {
            this.GetTransactionsByBillingClientAsync(access_key, customer_uuid, type, start_date, end_date, flags, null);
        }
        
        /// <remarks/>
        public void GetTransactionsByBillingClientAsync(int access_key, string customer_uuid, string type, string start_date, string end_date, int flags, object userState) {
            if ((this.GetTransactionsByBillingClientOperationCompleted == null)) {
                this.GetTransactionsByBillingClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionsByBillingClientOperationCompleted);
            }
            this.InvokeAsync("GetTransactionsByBillingClient", new object[] {
                        access_key,
                        customer_uuid,
                        type,
                        start_date,
                        end_date,
                        flags}, this.GetTransactionsByBillingClientOperationCompleted, userState);
        }
        
        private void OnGetTransactionsByBillingClientOperationCompleted(object arg) {
            if ((this.GetTransactionsByBillingClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionsByBillingClientCompleted(this, new GetTransactionsByBillingClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetEntitiesOfType", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetEntitiesOfType(int access_key, int flags, string start_with, int entity_type, out string entity_list_xml) {
            object[] results = this.Invoke("GetEntitiesOfType", new object[] {
                        access_key,
                        flags,
                        start_with,
                        entity_type});
            entity_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntitiesOfTypeAsync(int access_key, int flags, string start_with, int entity_type) {
            this.GetEntitiesOfTypeAsync(access_key, flags, start_with, entity_type, null);
        }
        
        /// <remarks/>
        public void GetEntitiesOfTypeAsync(int access_key, int flags, string start_with, int entity_type, object userState) {
            if ((this.GetEntitiesOfTypeOperationCompleted == null)) {
                this.GetEntitiesOfTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntitiesOfTypeOperationCompleted);
            }
            this.InvokeAsync("GetEntitiesOfType", new object[] {
                        access_key,
                        flags,
                        start_with,
                        entity_type}, this.GetEntitiesOfTypeOperationCompleted, userState);
        }
        
        private void OnGetEntitiesOfTypeOperationCompleted(object arg) {
            if ((this.GetEntitiesOfTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntitiesOfTypeCompleted(this, new GetEntitiesOfTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetWebDocument", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("document")]
        public string GetWebDocument(string trans_uuid, int doc_id, out int document_length, out int is_ole_doc) {
            object[] results = this.Invoke("GetWebDocument", new object[] {
                        trans_uuid,
                        doc_id});
            document_length = ((int)(results[1]));
            is_ole_doc = ((int)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebDocumentAsync(string trans_uuid, int doc_id) {
            this.GetWebDocumentAsync(trans_uuid, doc_id, null);
        }
        
        /// <remarks/>
        public void GetWebDocumentAsync(string trans_uuid, int doc_id, object userState) {
            if ((this.GetWebDocumentOperationCompleted == null)) {
                this.GetWebDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebDocumentOperationCompleted);
            }
            this.InvokeAsync("GetWebDocument", new object[] {
                        trans_uuid,
                        doc_id}, this.GetWebDocumentOperationCompleted, userState);
        }
        
        private void OnGetWebDocumentOperationCompleted(object arg) {
            if ((this.GetWebDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebDocumentCompleted(this, new GetWebDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetFirstTransbyDate", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetFirstTransbyDate(int access_key, string type, string start_date, string end_date, int flags, int record_quantity, int backwards_order, out string cookie, out int more_results) {
            object[] results = this.Invoke("GetFirstTransbyDate", new object[] {
                        access_key,
                        type,
                        start_date,
                        end_date,
                        flags,
                        record_quantity,
                        backwards_order});
            cookie = ((string)(results[1]));
            more_results = ((int)(results[2]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetFirstTransbyDateAsync(int access_key, string type, string start_date, string end_date, int flags, int record_quantity, int backwards_order) {
            this.GetFirstTransbyDateAsync(access_key, type, start_date, end_date, flags, record_quantity, backwards_order, null);
        }
        
        /// <remarks/>
        public void GetFirstTransbyDateAsync(int access_key, string type, string start_date, string end_date, int flags, int record_quantity, int backwards_order, object userState) {
            if ((this.GetFirstTransbyDateOperationCompleted == null)) {
                this.GetFirstTransbyDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFirstTransbyDateOperationCompleted);
            }
            this.InvokeAsync("GetFirstTransbyDate", new object[] {
                        access_key,
                        type,
                        start_date,
                        end_date,
                        flags,
                        record_quantity,
                        backwards_order}, this.GetFirstTransbyDateOperationCompleted, userState);
        }
        
        private void OnGetFirstTransbyDateOperationCompleted(object arg) {
            if ((this.GetFirstTransbyDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFirstTransbyDateCompleted(this, new GetFirstTransbyDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetFirstTransbyDateJS", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetFirstTransbyDateJS(int access_key, string type, string start_date, string end_date, int flags, int record_quantity, int backwards_order, string function, string xml_params, out string cookie, out int more_results) {
            object[] results = this.Invoke("GetFirstTransbyDateJS", new object[] {
                        access_key,
                        type,
                        start_date,
                        end_date,
                        flags,
                        record_quantity,
                        backwards_order,
                        function,
                        xml_params});
            cookie = ((string)(results[1]));
            more_results = ((int)(results[2]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetFirstTransbyDateJSAsync(int access_key, string type, string start_date, string end_date, int flags, int record_quantity, int backwards_order, string function, string xml_params) {
            this.GetFirstTransbyDateJSAsync(access_key, type, start_date, end_date, flags, record_quantity, backwards_order, function, xml_params, null);
        }
        
        /// <remarks/>
        public void GetFirstTransbyDateJSAsync(int access_key, string type, string start_date, string end_date, int flags, int record_quantity, int backwards_order, string function, string xml_params, object userState) {
            if ((this.GetFirstTransbyDateJSOperationCompleted == null)) {
                this.GetFirstTransbyDateJSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFirstTransbyDateJSOperationCompleted);
            }
            this.InvokeAsync("GetFirstTransbyDateJS", new object[] {
                        access_key,
                        type,
                        start_date,
                        end_date,
                        flags,
                        record_quantity,
                        backwards_order,
                        function,
                        xml_params}, this.GetFirstTransbyDateJSOperationCompleted, userState);
        }
        
        private void OnGetFirstTransbyDateJSOperationCompleted(object arg) {
            if ((this.GetFirstTransbyDateJSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFirstTransbyDateJSCompleted(this, new GetFirstTransbyDateJSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetNextTransbyDate", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetNextTransbyDate(ref string cookie, out string trans_list_xml, out int more_results) {
            object[] results = this.Invoke("GetNextTransbyDate", new object[] {
                        cookie});
            cookie = ((string)(results[1]));
            trans_list_xml = ((string)(results[2]));
            more_results = ((int)(results[3]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextTransbyDateAsync(string cookie) {
            this.GetNextTransbyDateAsync(cookie, null);
        }
        
        /// <remarks/>
        public void GetNextTransbyDateAsync(string cookie, object userState) {
            if ((this.GetNextTransbyDateOperationCompleted == null)) {
                this.GetNextTransbyDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextTransbyDateOperationCompleted);
            }
            this.InvokeAsync("GetNextTransbyDate", new object[] {
                        cookie}, this.GetNextTransbyDateOperationCompleted, userState);
        }
        
        private void OnGetNextTransbyDateOperationCompleted(object arg) {
            if ((this.GetNextTransbyDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextTransbyDateCompleted(this, new GetNextTransbyDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetTransRangeByDateJS", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetTransRangeByDateJS(int access_key, string type, string start_date, string end_date, int flags, string function, string xml_params, out string trans_list_xml) {
            object[] results = this.Invoke("GetTransRangeByDateJS", new object[] {
                        access_key,
                        type,
                        start_date,
                        end_date,
                        flags,
                        function,
                        xml_params});
            trans_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransRangeByDateJSAsync(int access_key, string type, string start_date, string end_date, int flags, string function, string xml_params) {
            this.GetTransRangeByDateJSAsync(access_key, type, start_date, end_date, flags, function, xml_params, null);
        }
        
        /// <remarks/>
        public void GetTransRangeByDateJSAsync(int access_key, string type, string start_date, string end_date, int flags, string function, string xml_params, object userState) {
            if ((this.GetTransRangeByDateJSOperationCompleted == null)) {
                this.GetTransRangeByDateJSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransRangeByDateJSOperationCompleted);
            }
            this.InvokeAsync("GetTransRangeByDateJS", new object[] {
                        access_key,
                        type,
                        start_date,
                        end_date,
                        flags,
                        function,
                        xml_params}, this.GetTransRangeByDateJSOperationCompleted, userState);
        }
        
        private void OnGetTransRangeByDateJSOperationCompleted(object arg) {
            if ((this.GetTransRangeByDateJSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransRangeByDateJSCompleted(this, new GetTransRangeByDateJSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetSecureTrackingTransaction", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetSecureTrackingTransaction(string user, string pass, string app, string number, out string trans_xml) {
            object[] results = this.Invoke("GetSecureTrackingTransaction", new object[] {
                        user,
                        pass,
                        app,
                        number});
            trans_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecureTrackingTransactionAsync(string user, string pass, string app, string number) {
            this.GetSecureTrackingTransactionAsync(user, pass, app, number, null);
        }
        
        /// <remarks/>
        public void GetSecureTrackingTransactionAsync(string user, string pass, string app, string number, object userState) {
            if ((this.GetSecureTrackingTransactionOperationCompleted == null)) {
                this.GetSecureTrackingTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecureTrackingTransactionOperationCompleted);
            }
            this.InvokeAsync("GetSecureTrackingTransaction", new object[] {
                        user,
                        pass,
                        app,
                        number}, this.GetSecureTrackingTransactionOperationCompleted, userState);
        }
        
        private void OnGetSecureTrackingTransactionOperationCompleted(object arg) {
            if ((this.GetSecureTrackingTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecureTrackingTransactionCompleted(this, new GetSecureTrackingTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#Invoke", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error Invoke(int access_key, string operation, int flags, string input, out string output) {
            object[] results = this.Invoke("Invoke", new object[] {
                        access_key,
                        operation,
                        flags,
                        input});
            output = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void InvokeAsync(int access_key, string operation, int flags, string input) {
            this.InvokeAsync(access_key, operation, flags, input, null);
        }
        
        /// <remarks/>
        public void InvokeAsync(int access_key, string operation, int flags, string input, object userState) {
            if ((this.InvokeOperationCompleted == null)) {
                this.InvokeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvokeOperationCompleted);
            }
            this.InvokeAsync("Invoke", new object[] {
                        access_key,
                        operation,
                        flags,
                        input}, this.InvokeOperationCompleted, userState);
        }
        
        private void OnInvokeOperationCompleted(object arg) {
            if ((this.InvokeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvokeCompleted(this, new InvokeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#ValidateSalesOrder", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error ValidateSalesOrder(int access_key, string sales_order_xml, out string result_xml, out string result_string) {
            object[] results = this.Invoke("ValidateSalesOrder", new object[] {
                        access_key,
                        sales_order_xml});
            result_xml = ((string)(results[1]));
            result_string = ((string)(results[2]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateSalesOrderAsync(int access_key, string sales_order_xml) {
            this.ValidateSalesOrderAsync(access_key, sales_order_xml, null);
        }
        
        /// <remarks/>
        public void ValidateSalesOrderAsync(int access_key, string sales_order_xml, object userState) {
            if ((this.ValidateSalesOrderOperationCompleted == null)) {
                this.ValidateSalesOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateSalesOrderOperationCompleted);
            }
            this.InvokeAsync("ValidateSalesOrder", new object[] {
                        access_key,
                        sales_order_xml}, this.ValidateSalesOrderOperationCompleted, userState);
        }
        
        private void OnValidateSalesOrderOperationCompleted(object arg) {
            if ((this.ValidateSalesOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateSalesOrderCompleted(this, new ValidateSalesOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#CancelSalesOrder", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error CancelSalesOrder(int access_key, string sales_order_number, out string result_string) {
            object[] results = this.Invoke("CancelSalesOrder", new object[] {
                        access_key,
                        sales_order_number});
            result_string = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void CancelSalesOrderAsync(int access_key, string sales_order_number) {
            this.CancelSalesOrderAsync(access_key, sales_order_number, null);
        }
        
        /// <remarks/>
        public void CancelSalesOrderAsync(int access_key, string sales_order_number, object userState) {
            if ((this.CancelSalesOrderOperationCompleted == null)) {
                this.CancelSalesOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelSalesOrderOperationCompleted);
            }
            this.InvokeAsync("CancelSalesOrder", new object[] {
                        access_key,
                        sales_order_number}, this.CancelSalesOrderOperationCompleted, userState);
        }
        
        private void OnCancelSalesOrderOperationCompleted(object arg) {
            if ((this.CancelSalesOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelSalesOrderCompleted(this, new CancelSalesOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SetTransactionCharges", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SetTransactionCharges(int access_key, int flags, string type, string number, string charge_list_xml, out string error_desc) {
            object[] results = this.Invoke("SetTransactionCharges", new object[] {
                        access_key,
                        flags,
                        type,
                        number,
                        charge_list_xml});
            error_desc = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SetTransactionChargesAsync(int access_key, int flags, string type, string number, string charge_list_xml) {
            this.SetTransactionChargesAsync(access_key, flags, type, number, charge_list_xml, null);
        }
        
        /// <remarks/>
        public void SetTransactionChargesAsync(int access_key, int flags, string type, string number, string charge_list_xml, object userState) {
            if ((this.SetTransactionChargesOperationCompleted == null)) {
                this.SetTransactionChargesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTransactionChargesOperationCompleted);
            }
            this.InvokeAsync("SetTransactionCharges", new object[] {
                        access_key,
                        flags,
                        type,
                        number,
                        charge_list_xml}, this.SetTransactionChargesOperationCompleted, userState);
        }
        
        private void OnSetTransactionChargesOperationCompleted(object arg) {
            if ((this.SetTransactionChargesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTransactionChargesCompleted(this, new SetTransactionChargesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#UpdatePOD", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error UpdatePOD(int access_key, string trans_type, string trans_uuid, string pod_xml, string delivered_items_xml, string undelivered_items_xml, string internal_comments, out string error_desc) {
            object[] results = this.Invoke("UpdatePOD", new object[] {
                        access_key,
                        trans_type,
                        trans_uuid,
                        pod_xml,
                        delivered_items_xml,
                        undelivered_items_xml,
                        internal_comments});
            error_desc = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePODAsync(int access_key, string trans_type, string trans_uuid, string pod_xml, string delivered_items_xml, string undelivered_items_xml, string internal_comments) {
            this.UpdatePODAsync(access_key, trans_type, trans_uuid, pod_xml, delivered_items_xml, undelivered_items_xml, internal_comments, null);
        }
        
        /// <remarks/>
        public void UpdatePODAsync(int access_key, string trans_type, string trans_uuid, string pod_xml, string delivered_items_xml, string undelivered_items_xml, string internal_comments, object userState) {
            if ((this.UpdatePODOperationCompleted == null)) {
                this.UpdatePODOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePODOperationCompleted);
            }
            this.InvokeAsync("UpdatePOD", new object[] {
                        access_key,
                        trans_type,
                        trans_uuid,
                        pod_xml,
                        delivered_items_xml,
                        undelivered_items_xml,
                        internal_comments}, this.UpdatePODOperationCompleted, userState);
        }
        
        private void OnUpdatePODOperationCompleted(object arg) {
            if ((this.UpdatePODCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePODCompleted(this, new UpdatePODCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#ApproveOrder", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error ApproveOrder(int access_key, string type, string number, string approved_by) {
            object[] results = this.Invoke("ApproveOrder", new object[] {
                        access_key,
                        type,
                        number,
                        approved_by});
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveOrderAsync(int access_key, string type, string number, string approved_by) {
            this.ApproveOrderAsync(access_key, type, number, approved_by, null);
        }
        
        /// <remarks/>
        public void ApproveOrderAsync(int access_key, string type, string number, string approved_by, object userState) {
            if ((this.ApproveOrderOperationCompleted == null)) {
                this.ApproveOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveOrderOperationCompleted);
            }
            this.InvokeAsync("ApproveOrder", new object[] {
                        access_key,
                        type,
                        number,
                        approved_by}, this.ApproveOrderOperationCompleted, userState);
        }
        
        private void OnApproveOrderOperationCompleted(object arg) {
            if ((this.ApproveOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveOrderCompleted(this, new ApproveOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SubmitPickupOrder", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SubmitPickupOrder(int access_key, string pickup_order_xml, out string pickup_order_number, out string result_string) {
            object[] results = this.Invoke("SubmitPickupOrder", new object[] {
                        access_key,
                        pickup_order_xml});
            pickup_order_number = ((string)(results[1]));
            result_string = ((string)(results[2]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitPickupOrderAsync(int access_key, string pickup_order_xml) {
            this.SubmitPickupOrderAsync(access_key, pickup_order_xml, null);
        }
        
        /// <remarks/>
        public void SubmitPickupOrderAsync(int access_key, string pickup_order_xml, object userState) {
            if ((this.SubmitPickupOrderOperationCompleted == null)) {
                this.SubmitPickupOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitPickupOrderOperationCompleted);
            }
            this.InvokeAsync("SubmitPickupOrder", new object[] {
                        access_key,
                        pickup_order_xml}, this.SubmitPickupOrderOperationCompleted, userState);
        }
        
        private void OnSubmitPickupOrderOperationCompleted(object arg) {
            if ((this.SubmitPickupOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitPickupOrderCompleted(this, new SubmitPickupOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SetAttachment", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SetAttachment(int access_key, int flags, string type, string number, string attach_xml, out string error_desc) {
            object[] results = this.Invoke("SetAttachment", new object[] {
                        access_key,
                        flags,
                        type,
                        number,
                        attach_xml});
            error_desc = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SetAttachmentAsync(int access_key, int flags, string type, string number, string attach_xml) {
            this.SetAttachmentAsync(access_key, flags, type, number, attach_xml, null);
        }
        
        /// <remarks/>
        public void SetAttachmentAsync(int access_key, int flags, string type, string number, string attach_xml, object userState) {
            if ((this.SetAttachmentOperationCompleted == null)) {
                this.SetAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAttachmentOperationCompleted);
            }
            this.InvokeAsync("SetAttachment", new object[] {
                        access_key,
                        flags,
                        type,
                        number,
                        attach_xml}, this.SetAttachmentOperationCompleted, userState);
        }
        
        private void OnSetAttachmentOperationCompleted(object arg) {
            if ((this.SetAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAttachmentCompleted(this, new SetAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetAllAttachments", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error GetAllAttachments(int access_key, int flags, string type, string number, out string attach_list_xml) {
            object[] results = this.Invoke("GetAllAttachments", new object[] {
                        access_key,
                        flags,
                        type,
                        number});
            attach_list_xml = ((string)(results[1]));
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAttachmentsAsync(int access_key, int flags, string type, string number) {
            this.GetAllAttachmentsAsync(access_key, flags, type, number, null);
        }
        
        /// <remarks/>
        public void GetAllAttachmentsAsync(int access_key, int flags, string type, string number, object userState) {
            if ((this.GetAllAttachmentsOperationCompleted == null)) {
                this.GetAllAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAttachmentsOperationCompleted);
            }
            this.InvokeAsync("GetAllAttachments", new object[] {
                        access_key,
                        flags,
                        type,
                        number}, this.GetAllAttachmentsOperationCompleted, userState);
        }
        
        private void OnGetAllAttachmentsOperationCompleted(object arg) {
            if ((this.GetAllAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAttachmentsCompleted(this, new GetAllAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SetParentEntity", RequestNamespace="urn:CSSoapService", ResponseNamespace="urn:CSSoapService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public api_session_error SetParentEntity(int access_key, string entity_guid, string parent_guid) {
            object[] results = this.Invoke("SetParentEntity", new object[] {
                        access_key,
                        entity_guid,
                        parent_guid});
            return ((api_session_error)(results[0]));
        }
        
        /// <remarks/>
        public void SetParentEntityAsync(int access_key, string entity_guid, string parent_guid) {
            this.SetParentEntityAsync(access_key, entity_guid, parent_guid, null);
        }
        
        /// <remarks/>
        public void SetParentEntityAsync(int access_key, string entity_guid, string parent_guid, object userState) {
            if ((this.SetParentEntityOperationCompleted == null)) {
                this.SetParentEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetParentEntityOperationCompleted);
            }
            this.InvokeAsync("SetParentEntity", new object[] {
                        access_key,
                        entity_guid,
                        parent_guid}, this.SetParentEntityOperationCompleted, userState);
        }
        
        private void OnSetParentEntityOperationCompleted(object arg) {
            if ((this.SetParentEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetParentEntityCompleted(this, new SetParentEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:CSSoapService")]
    public partial class contact_info {
        
        private int idField;
        
        private string nameField;
        
        private string emailField;
        
        private string web_siteField;
        
        private string wan_ipField;
        
        private string lan_ipField;
        
        private short portField;
        
        private byte connect_typeField;
        
        private byte net_versionField;
        
        private int availabilityField;
        
        private int versionField;
        
        private short loc_licField;
        
        private short rem_licField;
        
        private int servicesField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string web_site {
            get {
                return this.web_siteField;
            }
            set {
                this.web_siteField = value;
            }
        }
        
        /// <remarks/>
        public string wan_ip {
            get {
                return this.wan_ipField;
            }
            set {
                this.wan_ipField = value;
            }
        }
        
        /// <remarks/>
        public string lan_ip {
            get {
                return this.lan_ipField;
            }
            set {
                this.lan_ipField = value;
            }
        }
        
        /// <remarks/>
        public short port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        public byte connect_type {
            get {
                return this.connect_typeField;
            }
            set {
                this.connect_typeField = value;
            }
        }
        
        /// <remarks/>
        public byte net_version {
            get {
                return this.net_versionField;
            }
            set {
                this.net_versionField = value;
            }
        }
        
        /// <remarks/>
        public int availability {
            get {
                return this.availabilityField;
            }
            set {
                this.availabilityField = value;
            }
        }
        
        /// <remarks/>
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public short loc_lic {
            get {
                return this.loc_licField;
            }
            set {
                this.loc_licField = value;
            }
        }
        
        /// <remarks/>
        public short rem_lic {
            get {
                return this.rem_licField;
            }
            set {
                this.rem_licField = value;
            }
        }
        
        /// <remarks/>
        public int services {
            get {
                return this.servicesField;
            }
            set {
                this.servicesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:CSSoapService")]
    public partial class contact_info2 {
        
        private int idField;
        
        private string nameField;
        
        private string emailField;
        
        private string web_siteField;
        
        private string wan_ipField;
        
        private string lan_ipField;
        
        private short portField;
        
        private byte connect_typeField;
        
        private byte net_versionField;
        
        private int availabilityField;
        
        private int versionField;
        
        private short loc_licField;
        
        private short rem_licField;
        
        private int servicesField;
        
        private short lan_portField;
        
        private short wms_licField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string web_site {
            get {
                return this.web_siteField;
            }
            set {
                this.web_siteField = value;
            }
        }
        
        /// <remarks/>
        public string wan_ip {
            get {
                return this.wan_ipField;
            }
            set {
                this.wan_ipField = value;
            }
        }
        
        /// <remarks/>
        public string lan_ip {
            get {
                return this.lan_ipField;
            }
            set {
                this.lan_ipField = value;
            }
        }
        
        /// <remarks/>
        public short port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        public byte connect_type {
            get {
                return this.connect_typeField;
            }
            set {
                this.connect_typeField = value;
            }
        }
        
        /// <remarks/>
        public byte net_version {
            get {
                return this.net_versionField;
            }
            set {
                this.net_versionField = value;
            }
        }
        
        /// <remarks/>
        public int availability {
            get {
                return this.availabilityField;
            }
            set {
                this.availabilityField = value;
            }
        }
        
        /// <remarks/>
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public short loc_lic {
            get {
                return this.loc_licField;
            }
            set {
                this.loc_licField = value;
            }
        }
        
        /// <remarks/>
        public short rem_lic {
            get {
                return this.rem_licField;
            }
            set {
                this.rem_licField = value;
            }
        }
        
        /// <remarks/>
        public int services {
            get {
                return this.servicesField;
            }
            set {
                this.servicesField = value;
            }
        }
        
        /// <remarks/>
        public short lan_port {
            get {
                return this.lan_portField;
            }
            set {
                this.lan_portField = value;
            }
        }
        
        /// <remarks/>
        public short wms_lic {
            get {
                return this.wms_licField;
            }
            set {
                this.wms_licField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:CSSoapService")]
    public enum api_session_error {
        
        /// <remarks/>
        license_in_use,
        
        /// <remarks/>
        over_credit_limit,
        
        /// <remarks/>
        no_capacity_in_trip,
        
        /// <remarks/>
        service_unreachable,
        
        /// <remarks/>
        invalid_operation,
        
        /// <remarks/>
        error_saving_to_database,
        
        /// <remarks/>
        unknown_object,
        
        /// <remarks/>
        xml_validation_error,
        
        /// <remarks/>
        invalid_xml,
        
        /// <remarks/>
        transaction_not_found,
        
        /// <remarks/>
        access_denied,
        
        /// <remarks/>
        too_many_open_sessions,
        
        /// <remarks/>
        no_error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TestConnectionCompletedEventHandler(object sender, TestConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void StartTrackingCompletedEventHandler(object sender, StartTrackingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartTrackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartTrackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int services {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string company_info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int cookie {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTrackingTransactionCompletedEventHandler(object sender, GetTrackingTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrackingTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrackingTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAttachmentCompletedEventHandler(object sender, GetAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDocumentCompletedEventHandler(object sender, GetDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InvitationFromPeerCompletedEventHandler(object sender, InvitationFromPeerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvitationFromPeerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvitationFromPeerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AnswerInvitationCompletedEventHandler(object sender, AnswerInvitationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnswerInvitationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnswerInvitationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public contact_info pInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((contact_info)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AnswerInvitation2CompletedEventHandler(object sender, AnswerInvitation2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnswerInvitation2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnswerInvitation2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public contact_info2 pInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((contact_info2)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void StartSessionCompletedEventHandler(object sender, StartSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int access_key {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void EndSessionCompletedEventHandler(object sender, EndSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTransactionCompletedEventHandler(object sender, GetTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string trans_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetTransactionCompletedEventHandler(object sender, SetTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error_desc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTransRangeByDateCompletedEventHandler(object sender, GetTransRangeByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransRangeByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransRangeByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string trans_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteTransactionCompletedEventHandler(object sender, DeleteTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RenameTransactionCompletedEventHandler(object sender, RenameTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWorkingPortsCompletedEventHandler(object sender, GetWorkingPortsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkingPortsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkingPortsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ports_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTripScheduleCompletedEventHandler(object sender, GetTripScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTripScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTripScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string trip_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void BookingRequestCompletedEventHandler(object sender, BookingRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookingRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookingRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string booking_number {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string result_string {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void StartTracking2CompletedEventHandler(object sender, StartTracking2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartTracking2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartTracking2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int services {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string company_info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string user_info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public int cookie {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPackageTypesCompletedEventHandler(object sender, GetPackageTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pack_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelBookingCompletedEventHandler(object sender, CancelBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCustomFieldDefinitionsCompletedEventHandler(object sender, GetCustomFieldDefinitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomFieldDefinitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomFieldDefinitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string field_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetItemFromVINCompletedEventHandler(object sender, GetItemFromVINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemFromVINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemFromVINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string item_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetShipmentStatusCompletedEventHandler(object sender, SetShipmentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetShipmentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetShipmentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMagayaDocumentCompletedEventHandler(object sender, GetMagayaDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMagayaDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMagayaDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string attach_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountingTransactionsCompletedEventHandler(object sender, GetAccountingTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountingTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountingTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string trans_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRelatedTransactionsCompletedEventHandler(object sender, GetRelatedTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelatedTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelatedTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string trans_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountDefinitionsCompletedEventHandler(object sender, GetAccountDefinitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountDefinitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountDefinitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string account_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetChargeDefinitionsCompletedEventHandler(object sender, GetChargeDefinitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChargeDefinitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChargeDefinitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string service_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetActiveCurrenciesCompletedEventHandler(object sender, GetActiveCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string currency_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void QueryLogCompletedEventHandler(object sender, QueryLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string trans_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPODDataCompletedEventHandler(object sender, GetPODDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPODDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPODDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetClientRatesCompletedEventHandler(object sender, GetClientRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string rate_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStandardRatesCompletedEventHandler(object sender, GetStandardRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStandardRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStandardRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string rate_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetClientChargeDefinitionsCompletedEventHandler(object sender, GetClientChargeDefinitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientChargeDefinitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientChargeDefinitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string charge_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetRateCompletedEventHandler(object sender, SetRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error_desc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetEntityCompletedEventHandler(object sender, SetEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error_desc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetEntitiesCompletedEventHandler(object sender, GetEntitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string entity_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetEntityContactsCompletedEventHandler(object sender, GetEntityContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntityContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntityContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string contact_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SubmitSalesOrderCompletedEventHandler(object sender, SubmitSalesOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitSalesOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitSalesOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sales_order_number {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string result_string {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SubmitCargoReleaseCompletedEventHandler(object sender, SubmitCargoReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitCargoReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitCargoReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string cargo_release_number {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string result_string {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SubmitShipmentCompletedEventHandler(object sender, SubmitShipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitShipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitShipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string shipment_number {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string result_string {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetEventDefinitionsCompletedEventHandler(object sender, GetEventDefinitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventDefinitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventDefinitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string event_definition_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetTransactionEventsCompletedEventHandler(object sender, SetTransactionEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTransactionEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTransactionEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error_desc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateOrderCompletedEventHandler(object sender, UpdateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error_desc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetCustomFieldValueCompletedEventHandler(object sender, SetCustomFieldValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCustomFieldValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCustomFieldValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetApprovalStatusCompletedEventHandler(object sender, SetApprovalStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetApprovalStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetApprovalStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCarrierRatesCompletedEventHandler(object sender, GetCarrierRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarrierRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarrierRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string rate_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetEntityTransactionsCompletedEventHandler(object sender, GetEntityTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntityTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntityTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string acctrans_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void QueryLogJSCompletedEventHandler(object sender, QueryLogJSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryLogJSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryLogJSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string trans_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExistsTransactionCompletedEventHandler(object sender, ExistsTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int exist_trans {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTransactionStatusCompletedEventHandler(object sender, GetTransactionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string trans_status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetTrackingUserCompletedEventHandler(object sender, SetTrackingUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTrackingUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTrackingUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetItemDefinitionsByCustomerCompletedEventHandler(object sender, GetItemDefinitionsByCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemDefinitionsByCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemDefinitionsByCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string def_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetInventoryItemsByItemDefinitionCompletedEventHandler(object sender, GetInventoryItemsByItemDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryItemsByItemDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryItemsByItemDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string item_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTransactionsByBillingClientCompletedEventHandler(object sender, GetTransactionsByBillingClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionsByBillingClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionsByBillingClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string trans_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetEntitiesOfTypeCompletedEventHandler(object sender, GetEntitiesOfTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntitiesOfTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntitiesOfTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string entity_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWebDocumentCompletedEventHandler(object sender, GetWebDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int document_length {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int is_ole_doc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetFirstTransbyDateCompletedEventHandler(object sender, GetFirstTransbyDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFirstTransbyDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFirstTransbyDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string cookie {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int more_results {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetFirstTransbyDateJSCompletedEventHandler(object sender, GetFirstTransbyDateJSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFirstTransbyDateJSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFirstTransbyDateJSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string cookie {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int more_results {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetNextTransbyDateCompletedEventHandler(object sender, GetNextTransbyDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextTransbyDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextTransbyDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string cookie {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string trans_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int more_results {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTransRangeByDateJSCompletedEventHandler(object sender, GetTransRangeByDateJSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransRangeByDateJSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransRangeByDateJSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string trans_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSecureTrackingTransactionCompletedEventHandler(object sender, GetSecureTrackingTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecureTrackingTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecureTrackingTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string trans_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InvokeCompletedEventHandler(object sender, InvokeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvokeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvokeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string output {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ValidateSalesOrderCompletedEventHandler(object sender, ValidateSalesOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateSalesOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateSalesOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string result_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string result_string {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelSalesOrderCompletedEventHandler(object sender, CancelSalesOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelSalesOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelSalesOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string result_string {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetTransactionChargesCompletedEventHandler(object sender, SetTransactionChargesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTransactionChargesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTransactionChargesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error_desc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdatePODCompletedEventHandler(object sender, UpdatePODCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePODCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePODCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error_desc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ApproveOrderCompletedEventHandler(object sender, ApproveOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SubmitPickupOrderCompletedEventHandler(object sender, SubmitPickupOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitPickupOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitPickupOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pickup_order_number {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string result_string {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetAttachmentCompletedEventHandler(object sender, SetAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error_desc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllAttachmentsCompletedEventHandler(object sender, GetAllAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string attach_list_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetParentEntityCompletedEventHandler(object sender, SetParentEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetParentEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetParentEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public api_session_error Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((api_session_error)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591